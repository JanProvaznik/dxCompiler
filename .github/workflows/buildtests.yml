name: Build Tests
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - ready_for_review
      - labeled
  workflow_dispatch:
    inputs:
        build_only:
          required: true
          default: 'true'
          description: 'Build dxCompiler only; Skip running tests'     
        test:
          required: true
          default: 'M'
permissions:
  contents: read
  actions: write
  packages: read
jobs:
  test:
    name: Build Tests (Staging)
    if: contains(github.event.pull_request.labels.*.name, 'build')
    runs-on: ubuntu-20.04
    env:
      PROJECT: dxCompiler_playground
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      # performance optimizations https://abbbi.github.io/actions/
      - uses: abbbi/github-actions-tune@v1
      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install dxpy and other dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https wget git openssh-server tree python3 python3-pip python3-venv
          cwltool=`jq -r '.execDepends.cwl[0].name' scripts/bundled_dependencies.json`
          pip3 install --upgrade pip setuptools pyOpenSSL
          pip3 install termcolor dxpy $cwltool
          # install dxda
          sudo wget -O/usr/local/bin/dx-download-agent https://github.com/dnanexus/dxda/releases/download/v0.5.7/dx-download-agent-linux
          sudo chmod +x /usr/local/bin/dx-download-agent
      - name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ROBOT_TOKEN: ${{ secrets.DX_STAGING_ROBOT_TOKEN }}
          TEST_ROBOT_TOKEN: ${{ secrets.DX_STAGING_TEST_ROBOT_TOKEN }}
          EVENT_NAME: ${{ github.event_name }}
          IF_BUILDONLY: ${{ github.event.inputs.build_only }}
          TEST_SUITE: ${{ github.event.inputs.test }}
        run: |
          export PATH="$PATH:$HOME/.local/bin"

          # Set up DNAnexus staging environment
          dx login --noprojects --staging --token $ROBOT_TOKEN
          dx select $PROJECT
          cd ${GITHUB_WORKSPACE}

          # Select mode
          if [ "$EVENT_NAME" == "workflow_dispatch" ]
          then
            if [ "$IF_BUILDONLY" == "true" ]
            then
              CMD="--build only"
              echo "Build dxCompiler only"
            else
              CMD="--test $TEST_SUITE"
              echo "Will run tests $TEST_SUITE"
            fi
          else
            TEST_SUITE="cwl_workflows"
            CMD="--test $TEST_SUITE"
            echo "Will run tests $TEST_SUITE"
          fi

          # Build and Run tests
          FOLDER=/builds/build_tests/test_gha_dxcompiler_$(date +%s)_$RANDOM
          dx mkdir -p $FOLDER
          python3 scripts/run_tests.py --folder $FOLDER --project $PROJECT \
          --delay-compile-errors \
          --delay-run-errors \
          $CMD